{"version":3,"sources":["components/Navbar/Navbar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonItem/PersonItem.tsx","components/Table/Table.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonItem","person","slug","useParams","sex","name","born","died","mother","motherName","father","fatherName","Table","people","map","PeopleTable","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","catch","finally","length","find","p","PeoplePage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"sQAGaA,EAAS,WACpB,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEE,GAAG,IACHF,UAAW,gBAAGG,EAAH,EAAGA,SAAH,OAAkBC,IAAG,cAAe,CAC7C,8BAA+BD,GADtB,EAFb,kBAQA,cAAC,IAAD,CACED,GAAG,UACHF,UAAW,gBAAGG,EAAH,EAAGA,SAAH,OAAkBC,IAAG,cAAe,CAC7C,8BAA+BD,GADtB,EAFb,0BAaT,EClCYE,EAAW,WACtB,OACE,oBAAIL,UAAU,QAAd,sBAEH,ECJYM,EAAe,WAC1B,OACE,oBAAIN,UAAU,QAAd,2BAEH,E,sBCFYO,G,MAAS,kBACpB,qBAAKP,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOf,SAASQ,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCLM,IAAMQ,EAAwC,SAAC,GAAgB,IAAD,IAAbC,EAAa,EAAbA,OAC9CC,EAASC,cAATD,KAER,OACE,qBACE,UAAQ,SACRnB,UAAWI,IAAG,CAAE,yBAA0Bc,EAAOC,OAASA,IAF5D,UAIE,6BACE,cAAC,IAAD,CACEjB,GAAE,kBAAagB,EAAOC,MACtBnB,UAAWI,IAAG,CAAE,kBAAkC,MAAfc,EAAOG,MAF5C,SAIGH,EAAOI,SAIZ,6BAAKJ,EAAOG,MACZ,6BAAKH,EAAOK,OACZ,6BAAKL,EAAOM,OACZ,6BACIN,EAAOO,OAGL,cAAC,IAAD,CACEvB,GAAE,4BAAagB,EAAOO,cAApB,aAAa,EAAeN,MAC9BnB,UAAU,kBAFZ,SAIGkB,EAAOQ,aANT,6BAAKR,EAAOQ,YAAc,QAWjC,6BACIR,EAAOO,OAGL,cAAC,IAAD,CACEvB,GAAE,4BAAagB,EAAOS,cAApB,aAAa,EAAeR,MADhC,SAGGD,EAAOU,aALT,6BAAKV,EAAOU,YAAc,UAYtC,EChDYC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,wBACE,UAAQ,cACR9B,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACG8B,EAAOC,KAAI,SAAAb,GAAM,OAChB,cAAC,EAAD,CACEA,OAAQA,GACHA,EAAOC,KAHE,QAiHzB,ECrIYa,EAAc,WACzB,MAA4BC,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KACA,EAA8BD,oBAAkB,GAAhD,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,oBAAkB,GAApD,mBAAOI,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRD,GAAa,GACb9B,IACGK,MAAK,SAACE,GAAD,OAAcmB,EAAUnB,EAAxB,IACLyB,OAAM,kBAAMJ,GAAW,EAAjB,IACNK,SAAQ,kBAAMH,GAAa,EAAnB,GACZ,GAAE,IAgBH,OACE,qBAAKtC,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGqC,GAAa,cAAC,EAAD,KAEZA,GAAaF,GACb,mBAAG,UAAQ,qBAAqBnC,UAAU,kBAA1C,mCAKAqC,IAAcF,IAAYL,EAAOY,QACjC,mBAAG,UAAQ,kBAAX,gDAKAL,IAAcF,KAAaL,EAAOY,QAClC,cAAC,EAAD,CAAOZ,OA/BIA,EAAOC,KAAI,SAAAb,GAC1B,OAAO,YAAC,eACHA,GADL,IAEEO,OAAQK,EACLa,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,OAASJ,EAAOQ,UAAtB,IACTC,OAAQG,EACLa,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,OAASJ,EAAOU,UAAtB,KAEZ,UA6BJ,ECvDYiB,EAAa,WACxB,OACE,qCACE,oBAAI7C,UAAU,QAAd,yBAEA,cAAC,EAAD,MAGL,ECFY8C,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IACA,sBAAM9C,UAAU,UAAhB,SAEE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+C,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU9C,GAAG,IAAI+C,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,UAAUC,QAAS,cAAC,EAAD,IAA/B,SACE,cAAC,IAAD,CAAOD,KAAK,YAEd,cAAC,IAAD,CAAOA,KAAK,IAAIC,QAAS,cAAC,EAAD,eAZhB,ECAnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.1db1994b.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            People\n          </NavLink>\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype PersonItemProps = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<PersonItemProps> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {!person.mother\n          ? (<td>{person.motherName || '-'}</td>)\n          : (\n            <Link\n              to={`/people/${person.mother?.slug}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          )}\n\n      </td>\n      <td>\n        {!person.mother\n          ? (<td>{person.fatherName || '-'}</td>)\n          : (\n            <Link\n              to={`/people/${person.father?.slug}`}\n            >\n              {person.fatherName}\n            </Link>\n          )}\n\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype TableProps = {\n  people: Person[];\n};\n\nexport const Table: React.FC<TableProps> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            person={person}\n            key={person.slug}\n          />\n        ))}\n\n        {/* <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/jan-van-brussel-1714\">\n              Jan van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1714</td>\n          <td>1748</td>\n          <td>Joanna van Rooten</td>\n          <td>Jacobus van Brussel</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/philibert-haverbeke-1907\">\n              Philibert Haverbeke\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1907</td>\n          <td>1997</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/emma-de-milliano-1876\"\n            >\n              Emma de Milliano\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/emile-haverbeke-1877\">\n              Emile Haverbeke\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\" className=\"has-background-warning\">\n          <td>\n            <a href=\"#/people/jan-frans-van-brussel-1761\">\n              Jan Frans van Brussel\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1761</td>\n          <td>1833</td>\n          <td>-</td>\n\n          <td>\n            <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n              Jacobus Bernardus van Brussel\n            </a>\n          </td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/lievijne-jans-1542\"\n            >\n              Lievijne Jans\n            </a>\n          </td>\n\n          <td>f</td>\n          <td>1542</td>\n          <td>1582</td>\n          <td>-</td>\n          <td>-</td>\n        </tr>\n\n        <tr data-cy=\"person\">\n          <td>\n            <a href=\"#/people/bernardus-de-causmaecker-1721\">\n              Bernardus de Causmaecker\n            </a>\n          </td>\n\n          <td>m</td>\n          <td>1721</td>\n          <td>1789</td>\n\n          <td>\n            <a\n              className=\"has-text-danger\"\n              href=\"#/people/livina-haverbeke-1692\"\n            >\n              Livina Haverbeke\n            </a>\n          </td>\n\n          <td>\n            <a href=\"#/people/lieven-de-causmaecker-1696\">\n              Lieven de Causmaecker\n            </a>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Table } from '../Table/Table';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((response) => setPeople(response))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = () => {\n    const prepared = people.map(person => {\n      return ({\n        ...person,\n        mother: people\n          .find(p => p.name === person.motherName),\n        father: people\n          .find(p => p.name === person.fatherName),\n      });\n    });\n\n    return prepared;\n  };\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {!isLoading && isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isLoading && !isError && !people.length && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {!isLoading && !isError && !!people.length && (\n          <Table people={preparedPeople()} />\n        )}\n\n      </div>\n    </div>\n  );\n};\n","import { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}